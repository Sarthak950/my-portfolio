import type { ArgumentPlaceholder, Expression, SpreadElement, JSXNamespacedName } from '@babel/types';
import type { FeatureFlags } from '../../../feature_flags.js';
import { InvocationMode } from '../../../function.js';
export declare const IN_SOURCE_CONFIG_MODULE = "@netlify/functions";
export type ISCValues = {
    invocationMode?: InvocationMode;
    runtimeAPIVersion?: number;
    schedule?: string;
};
export declare const findISCDeclarationsInPath: (sourcePath: string, functionName: string, featureFlags: FeatureFlags) => Promise<ISCValues>;
export declare const findISCDeclarations: (source: string, functionName: string, featureFlags: FeatureFlags) => ISCValues;
export type ISCHandlerArg = ArgumentPlaceholder | Expression | SpreadElement | JSXNamespacedName;
export interface ISCExport {
    local: string;
    args: ISCHandlerArg[];
}
